import numpy as np
import math
import matplotlib.pyplot as plt


## dim = [quelconque, pair]

def polaireEnCartesien(r,a) :  ##Tout est dans le titre
    return r*np.sin(a), r*np.cos(a)    
    
def modifierCarte(carte,coordonnees) : ## carte c'est un matrice, et les coordonnees sont cartesiennes
    x,y = coordonnees
    dim = np.shape(carte)
    xMax, yMax = dim[1]//2, dim[0]
    if x >= -xMax and x <= xMax and y<= yMax :
        carte[math.floor(y),math.floor(x)+xMax] = 1


def cartographier(imax,ipas,dim,env) :  ## on donne des dim, et il cree un tableau des alentours Ensuite il met 1 a chaque fois qu'il y a un obstacle
    carte = np.zeros(dim)
    angle = -imax
    for x in range(dim[1]) :                                                      
        for y in range(1,dim[0]):                                                   
           if np.arctan(abs((x-(dim[1]/2))/y)) >= imax :  
                carte[y,x] = -1
    while angle <= imax :
        modifierCarte(carte,polaireEnCartesien(distance(angle,env), angle))
        angle += ipas
       
    return carte 


def creerEnvironnement() :
    env = np.zeros([200,100])
    env[100:140,20] = 1
    env[140,20:50] = 1
    env[20, 70:90] = 1
    env[160:180,80] = 1
    return env
    
def distance(angle,env) :
    pas = 0.1
    r = pas
    dim = np.shape(env)
    xMax, yMax = dim[1]//2, dim[0]
    x,y = polaireEnCartesien(r,angle)
    while x >= -xMax and x <= xMax and y <= yMax : 
        if env[math.floor(y),math.floor(x)+xMax] == 1 :
            return r 
        r += pas
        x,y = polaireEnCartesien(r,angle)
    return r+12
    
def affichage(carte) :
    dim = np.shape(carte)
    X = []
    Y = []
    X2 =[]
    Y2 =[]
    for x in range(dim[1]) :
        for y in range(dim[0]) :
            if carte[y,x] == 1 :
                X.append(dim[1]-x-1)
                Y.append(y)
            if carte[y,x] == -1 :
                X2.append(dim[1]-x-1)
                Y2.append(y)         
            
    plt.plot(Y,X, 'ro')
    plt.plot(Y2,X2, 'bo')
    plt.axis([0,dim[0],0,dim[1]])
    plt.show()
    


dim = [200,100]    
env = creerEnvironnement()     
affichage(env)
ipas = 0.005
imax = np.pi/3
carte = cartographier(imax,ipas,dim,env)
affichage(carte)
